{"version":3,"sources":["components/InputField/InputField.jsx","components/Spinner/Spinner.jsx","hooks/usePost.jsx","routes/Giphy/Giphy.jsx","routes/Home/Home.jsx","hooks/useFetch.jsx","routes/RickAndMorty/components/MoreInfo/MoreInfo.jsx","routes/RickAndMorty/components/Card/Card.jsx","routes/RickAndMorty/RickAndMorty.jsx","routes/TodoList/components/List/Item/Item.jsx","routes/TodoList/components/List/List.jsx","routes/TodoList/TodoList.jsx","App/Navigation/Navigation.jsx","App/App.jsx","index.js"],"names":["InputField","submitText","useState","text","setText","onSubmitHanlder","event","preventDefault","className","onSubmit","TextInput","value","onChange","target","Button","label","type","onClick","defaultProps","Spinner","usePost","endpoint","data","loading","error","hasLoaded","state","setState","postData","a","axios","post","Giphy","srcUrl","useEffect","Box","alignContent","Text","Image","fit","src","Home","message","useFetch","get","fetchData","MoreInfo","setLayer","name","episode","location","species","status","Layer","onClickOutside","onEsc","pad","Heading","alignSelf","level","margin","length","Card","character","image","hover","setHover","layer","onMouseEnter","onMouseLeave","opacity","RickAndMorty","charactersList","loadingFetch","Grid","columns","gap","rows","map","key","id","Item","initialCategory","category","initalDone","done","title","setDone","setCategory","TableRow","TableCell","CheckBox","scope","Select","options","option","TodoList","Table","TableHeader","border","TableBody","item","intialLoad","todoList","initialList","updatedList","loadingPost","isLoading","Navigation","to","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64f2f5d0.chunk.js","sourcesContent":["import { Button, TextInput } from 'grommet'\nimport PropTypes from 'prop-types'\nimport React, { useState } from 'react'\n\nimport './input.scss'\n\nexport default function InputField({ submitText }) {\n  const [text, setText] = useState('')\n\n  function onSubmitHanlder(event) {\n    event.preventDefault()\n    if (text) {\n      submitText(text)\n      setText('')\n    }\n  }\n\n  return (\n    <form className=\"form\" onSubmit={onSubmitHanlder}>\n      <div className=\"form__input\">\n        <TextInput\n          value={text}\n          onChange={event => setText(event.target.value)}\n        />\n      </div>\n      <Button label=\"Submit\" type=\"submit\" onClick={onSubmitHanlder} />\n    </form>\n  )\n}\n\nInputField.propTypes = {\n  submitText: PropTypes.func,\n}\n\nInputField.defaultProps = {\n  submitText: () => null,\n}\n","/* eslint-disable react/self-closing-comp */\nimport React from 'react'\nimport './spinner.scss'\n\nexport default function Spinner() {\n  return (\n    <div className=\"spinner\">\n      <div className=\"spinner__double-bounce1\"></div>\n      <div className=\"spinner__double-bounce2\"></div>\n    </div>\n  )\n}\n","import axios from 'axios'\nimport { useState } from 'react'\n\nexport default function usePost({ endpoint }) {\n  const [state, setState] = useState({\n    data: null,\n    loading: false,\n    error: false,\n    hasLoaded: false,\n  })\n\n  async function post(postData) {\n    try {\n      setState({ ...state, loading: true, hasLoaded: false })\n      const { data } = await axios.post(endpoint, { data: postData })\n      setState({ ...state, loading: false, hasLoaded: true, data })\n    } catch (err) {\n      setState({ ...state, loading: false, error: err })\n    }\n  }\n\n  return { ...state, post }\n}\n","import { Box, Image, Text } from 'grommet'\nimport React, { useEffect } from 'react'\n\nimport InputField from '../../components/InputField'\nimport Spinner from '../../components/Spinner'\nimport usePost from '../../hooks/usePost'\n\nimport './giphy.scss'\n\nexport default function Giphy() {\n  const { post, data: srcUrl, loading } = usePost({ endpoint: '/giphy/random' })\n\n  useEffect(() => {\n    post('yeah!')\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Box alignContent=\"center\" className=\"giphy\">\n      <InputField submitText={data => post(data)} />\n\n      <Text className=\"giphy__text\">\n        Write something on the input field to get a random GIF\n      </Text>\n\n      {loading ? (\n        <Spinner />\n      ) : (\n        srcUrl && <Image className=\"giphy__image\" fit=\"contain\" src={srcUrl} />\n      )}\n    </Box>\n  )\n}\n","import { Text } from 'grommet'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nexport default function Home({ message }) {\n  return <Text>{message}</Text>\n}\n\nHome.propTypes = {\n  message: PropTypes.string,\n}\n\nHome.defaultProps = {\n  message: 'Hi, this is a small React App with even smaller Apps ',\n}\n","import axios from 'axios'\nimport { useEffect, useState } from 'react'\n\nexport default function useFetch({ endpoint }) {\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n    error: false,\n    hasLoaded: false,\n  })\n\n  async function fetchData() {\n    try {\n      setState({ ...state, loading: true, hasLoaded: false })\n\n      const { data } = await axios.get(endpoint)\n\n      setState({ ...state, loading: false, hasLoaded: true, data })\n    } catch (err) {\n      setState({ ...state, loading: false, error: err })\n    }\n  }\n\n  useEffect(() => {\n    fetchData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return { ...state }\n}\n","import { Box, Text, Layer, Heading } from 'grommet'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nexport default function MoreInfo({\n  setLayer,\n  name,\n  episode,\n  location,\n  species,\n  status,\n}) {\n  return (\n    <Layer onClickOutside={() => setLayer(false)} onEsc={() => setLayer(false)}>\n      <Box pad=\"large\">\n        <Heading alignSelf=\"center\" level=\"2\">\n          Info\n        </Heading>\n        <Text alignSelf=\"center\">{name}</Text>\n        <Text margin=\"small\">\n          Number of episodes:\n          {episode.length}\n        </Text>\n        <Text margin=\"small\">\n          Location:\n          {location.name}\n        </Text>\n        <Text margin=\"small\">\n          Species:\n          {species}\n        </Text>\n        <Text margin=\"small\">\n          Status:\n          {status}\n        </Text>\n      </Box>\n    </Layer>\n  )\n}\n\nMoreInfo.propTypes = {\n  episode: PropTypes.arrayOf(PropTypes.string),\n  location: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n  name: PropTypes.string,\n  species: PropTypes.string,\n  status: PropTypes.string,\n  setLayer: PropTypes.func.isRequired,\n}\n\nMoreInfo.defaultProps = {\n  episode: '',\n  name: '',\n  location: {},\n  species: '',\n  status: '',\n}\n","import { Box, Text, Image } from 'grommet'\nimport PropTypes from 'prop-types'\nimport React, { useState } from 'react'\n\nimport MoreInfo from '../MoreInfo'\n\nimport './card.scss'\n\nexport default function Card({\n  character: { episode, location, name, image, species, status },\n}) {\n  const [hover, setHover] = useState(false)\n  const [layer, setLayer] = useState(false)\n\n  return (\n    <Box\n      className=\"card\"\n      onClick={() => setLayer(true)}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      <Text alignSelf=\"center\">{name}</Text>\n      <Image fit=\"contain\" opacity={hover ? 'medium' : false} src={image} />\n      {hover && <Text className=\"card__overlay-text\">Click for more info</Text>}\n      {layer && (\n        <MoreInfo\n          episode={episode}\n          location={location}\n          setLayer={value => setLayer(value)}\n          species={species}\n          status={status}\n        />\n      )}\n    </Box>\n  )\n}\n\nCard.propTypes = {\n  character: PropTypes.shape({\n    episode: PropTypes.array,\n    location: PropTypes.object,\n    name: PropTypes.string,\n    image: PropTypes.string,\n    species: PropTypes.string,\n    status: PropTypes.string,\n  }),\n}\n\nCard.defaultProps = {\n  character: { name: '', image: '' },\n}\n","import { Grid } from 'grommet'\nimport React from 'react'\n\nimport Spinner from '../../components/Spinner'\nimport useFetch from '../../hooks/useFetch'\n\nimport Card from './components/Card'\n\nexport default function RickAndMorty() {\n  const { data: charactersList, loading: loadingFetch = true } = useFetch({\n    endpoint: '/rick-and-morty/characters',\n  })\n\n  return (\n    <>\n      {loadingFetch ? (\n        <Spinner />\n      ) : (\n        <Grid columns=\"medium\" gap=\"medium\" rows=\"medium\">\n          {charactersList?.map(character => (\n            <Card character={character} key={character.id} />\n          ))}\n        </Grid>\n      )}\n    </>\n  )\n}\n","import { TableRow, TableCell, CheckBox, Select } from 'grommet'\nimport PropTypes from 'prop-types'\nimport React, { useState } from 'react'\n\nexport default function Item({\n  data: { category: initialCategory, done: initalDone, title },\n}) {\n  const [done, setDone] = useState(initalDone)\n  const [category, setCategory] = useState(initialCategory)\n  return (\n    <TableRow>\n      <TableCell>\n        <CheckBox done={done} onChange={event => setDone(event.target.done)} />\n      </TableCell>\n      <TableCell scope=\"row\">\n        <strong>{title}</strong>\n      </TableCell>\n      <TableCell>\n        <Select\n          options={['Work', 'Personal']}\n          value={category}\n          onChange={({ option }) => setCategory(option)}\n        />\n      </TableCell>\n      <TableCell>\n        <span>--</span>\n      </TableCell>\n    </TableRow>\n  )\n}\n\nItem.propTypes = {\n  data: PropTypes.shape({\n    category: PropTypes.string,\n    done: PropTypes.bool,\n    title: PropTypes.string,\n  }),\n}\n\nItem.defaultProps = {\n  data: {\n    category: 'Work',\n    done: false,\n    title: 'Title',\n  },\n}\n","import { Table, TableBody, TableCell, TableHeader, TableRow } from 'grommet'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport Item from './Item'\n\nexport default function TodoList({ data }) {\n  return (\n    <Table alignSelf=\"stretch\" className=\"list\">\n      <TableHeader>\n        <TableRow>\n          <TableCell border=\"bottom\" scope=\"col\">\n            Status\n          </TableCell>\n          <TableCell border=\"bottom\" scope=\"col\">\n            Title\n          </TableCell>\n          <TableCell border=\"bottom\" scope=\"col\">\n            Category\n          </TableCell>\n          <TableCell border=\"bottom\" scope=\"col\">\n            Date\n          </TableCell>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {data?.map(item => (\n          <Item data={item} key={item.id} />\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\nTodoList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n}\n\nTodoList.defaultProps = {\n  data: [],\n}\n","import { Box } from 'grommet'\nimport React, { useEffect, useState } from 'react'\n\nimport InputField from '../../components/InputField'\nimport Spinner from '../../components/Spinner'\nimport useFetch from '../../hooks/useFetch'\nimport usePost from '../../hooks/usePost'\n\nimport List from './components/List'\n\nexport default function TodoList() {\n  const [state, setState] = useState({\n    intialLoad: false,\n    todoList: [],\n  })\n\n  const { data: initialList, loading: loadingFetch } = useFetch({\n    endpoint: '/firebase/list',\n  })\n\n  const { data: updatedList, loading: loadingPost, post } = usePost({\n    endpoint: '/firebase/list',\n  })\n\n  const isLoading = loadingFetch || loadingPost\n\n  useEffect(() => {\n    if (initialList && !state.intialLoad) {\n      setState({ ...state, intialLoad: true, todoList: initialList })\n    } else if (updatedList && state.intialLoad) {\n      setState({ ...state, todoList: updatedList })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialList, updatedList])\n\n  return (\n    <Box>\n      <InputField\n        submitText={data => {\n          post(data)\n        }}\n      />\n      {isLoading ? <Spinner /> : <List data={state.todoList} />}\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Link } from '@reach/router'\nimport './navigation.scss'\n\nexport default function Navigation() {\n  return (\n    <nav className=\"navigation\">\n      <Link className=\"navigation__item\" to=\"/\">\n        Home\n      </Link>\n      <Link className=\"navigation__item\" to=\"todo\">\n        Todo\n      </Link>\n      <Link className=\"navigation__item\" to=\"giphy\">\n        Giphy\n      </Link>\n      <Link className=\"navigation__item\" to=\"rick-and-morty\">\n        Rick and Morty\n      </Link>\n    </nav>\n  )\n}\n","import { Router } from '@reach/router'\nimport React from 'react'\n\n// Routes\nimport Giphy from '../routes/Giphy/Giphy'\nimport Home from '../routes/Home'\nimport RickAndMorty from '../routes/RickAndMorty'\nimport Todo from '../routes/TodoList'\n\nimport Navigation from './Navigation'\nimport './app.scss'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navigation />\n      <main className=\"app__main\">\n        <Router>\n          <Home path=\"/\" />\n          <Todo path=\"todo\" />\n          <Giphy path=\"giphy\" />\n          <RickAndMorty path=\"rick-and-morty\" />\n        </Router>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","/* eslint-disable no-undef */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}